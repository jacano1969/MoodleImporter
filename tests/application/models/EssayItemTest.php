<?php

namespace MoodleImporter;
if (!defined('APPPATH'))
{
    define('APPPATH', dirname(__FILE__) . '/../../../application');
}

require_once APPPATH . '/models/Quiz.php';
require_once 'bb6xml.php';

/**
 * Test class for EssayItem.
 * Generated by PHPUnit on 2012-05-19 at 09:33:30.
 */
class EssayItemTest extends \PHPUnit_Framework_TestCase {

    /**
     * 
     * @covers MoodleImporter\EssayItem::ToXMLElement
     * 
     */
    public function testToXMLElement() 
    {
        $essayItem = new EssayItem;
        $essayItem->Name = "ES 001 - What is";
        $essayItem->PointValue = 2;
        $essayItem->Text = 'What is';

        $expected = <<<'ESSAY_XML'
        <question type="essay">
            <name>
            <text><![CDATA[ES 001 - What is]]></text>
            </name> 
            <questiontext format="html">
            <text><![CDATA[What is]]></text>
            </questiontext>
            <defaultgrade>2</defaultgrade>
        </question>
ESSAY_XML;
        $expected = new \SimpleXMLElement($expected);
        $this->assertTrue(xml_is_equal($expected, $essayItem->ToXMLElement(),false));  
    }

    /**
    * 
    * @covers MoodleImporter\EssayItem::ToHTML
    * 
    */
    public function testToHTML()
    {
        $essayItem = new EssayItem;
        $essayItem->Name = "ES 001 - What is";
        $essayItem->PointValue = 2;
        $essayItem->Text = 'What is';
        $expected = <<<'ESSAY_HTML'
        <p>Name: ES 001 - What is</p>
        <p>Question Text: What is</p>
ESSAY_HTML;
        
        $this->assertEquals($expected, $essayItem->ToHTML());

    }
    
    public function testFromBB6()
    {
        // First get rid of all unneeded whitespace not inside any tags
        $quizString = preg_replace('~\s*(<([^>]*)>[^<]*</\2>|<[^>]*>)\s*~','$1',\BB6XML::GetBB6ESItemData());
        $itemData = str_replace('\r\n', "", $quizString);
        $itemElement = new \SimpleXMLElement($itemData);
        $mtItem = new EssayItem();
        $mtItem->ImportBB6XML($itemElement, "001");
        $this->assertEquals('ES 001 - Essay question title', $mtItem->Name);
        $this->assertEquals('001', $mtItem->ID);
        $this->assertEquals('Describe the following things that happened one day.<div><ul><li>Went to bed</li><li>Woke up</li><li>Went to work</li></ul></div>', $mtItem->Text);
    }

}

?>
